'use strict';

// классический синтаксис:
// new RegExp('pattern', 'flags');

// альтернативный синтаксис (более употребимый):
//  /pattern/flags

//пример, ищем есть ли в вводе буква n (нижнего регистра)
const ans = prompt('Введите ваше имя');
const reg = /n/ig; // что ищем? какие есть флаги:
// i - ищем что-что вне зависимости от регистра
// g - ищем сразу несколько вхождений
// m - включает многострочный режим поиска


//ПОИСК:
// console.log(ans.search(reg)); //ограниченный метод поиска (только 1 вхождение)
// console.log(ans.match(reg)); //более глубокий поиск, выдает массив

// const pass = prompt('Password');
// console.log(pass.replace(/./g, "*")); //заменяет все символы на звездочки

// знак экранирования, то есть вывода из кодировки - "/" (слэш)

// console.log('12-34-56'.replace(/-/g, ':')); //меняем дефисы на двоеточия

// методы регулярных выражений, а не строк:
console.log(reg.test(ans));

// популярные паттерны для поисков (классы):
// \d - diggits
// \w - words
// \s - spaces 

//обратные классы:
//\D - НЕ цифры
//\W - НЕ буквы
//\S - НЕ пробелы...

const reg2 = /\d/i;
console.log(ans.match(reg2));

const str = 'my name is R2D2';
//как вырезать приведенное имя?
console.log(str.match(/\w\d\w\d/i));